#!/usr/bin/perl
##############################################################################
#
# Script:   dgrep
#
# Author:   Donovan Jones <donovan@catalyst.net.nz>
#
# Description:
#
# grep preprocessor with better pruning options than grep provides
# accepts all grep arguments

use strict;
use warnings;

use Pod::Usage;
use Getopt::Long qw(GetOptions);
use File::Find;
use File::Basename;
use File::Slurp;
use Cwd;
use File::HomeDir;

my $home_dir = File::HomeDir->my_home;

my $config_file = "$home_dir/.dgrep-ignore";

my $ignore = {};

foreach my $line (read_file($config_file)) {
    chomp($line);
    my ($type,$arg) = split/:/, $line;
    push @{$ignore->{$type}}, $arg;
}

my $cwd = cwd();

my(%opt);

if(!GetOptions(\%opt, 'help|?', 'verbose|v')) {
    pod2usage(-exitval => 1,  -verbose => 0);
}

pod2usage(-exitstatus => 0, -verbose => 1) if $opt{help};

my @files_to_grep;

find(\&process_file, $cwd);

sub process_file {

    my $file = $File::Find::name;

    if ( grep {$file =~ m{ / $_ \z }xms} @{$ignore->{file}} ) {
        print "file match, ignoring file $file\n" if $opt{verbose};
        return;
    }
    if ( grep {$file =~ m{ / $_ / }xms} @{$ignore->{dir}} ) {
        print "dir match, ignoring file $file\n" if $opt{verbose};
        return;
    }

    if (-f $file) {
        my $suffix = (fileparse($file, qr/\.[^.]*/))[2];
        if ( grep {".$_" eq $suffix} @{$ignore->{suffix}} ) {
            print "suffix match, ignoring file $file\n" if $opt{verbose};
        }
        else {
            $file =~ s{$cwd/}{}xms;
            push @files_to_grep, $file;
        }
    }
    elsif (-d $file) {
        #print "$file is a dir\n";
    }

}

my $files;
foreach my $file (sort @files_to_grep) {
    $files .= "$file\n";
}

write_file('xargs-tmp-file', $files);

my @commands = qw(
    xargs
    -a
    xargs-tmp-file
    grep
    -I
);

push(@commands, @ARGV);

system(@commands);

unlink 'xargs-tmp-file';

exit 0;

__END__

=head1 NAME

dgrep - grep preprocessor

=head1 SYNOPSIS

  dgrep [options] <files>

  Options:

   --help     detailed help message
   --verbose  makes dgrep tell you about files its skipping

=head1 DESCRIPTION

Dgrep is a grep preprocessor, it looks in a config file to get a list of files
that it should prune before invoking grep. The config file can include paths,
files or file suffixes. It aims to keep the output as close to grep as
possible. Dgrep assumes the grep arguments -r *, ie it operates on the cwd and
is recursive by default. If you want it to be non recursive then grep on its
own is probably a better bet.

=head1 OPTIONS

=over 4

=item B<--help>

Display this documentation.

=back

=cut
